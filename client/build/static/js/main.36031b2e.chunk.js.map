{"version":3,"sources":["components/Footer.js","constants/userConstants.js","constants/orderConstants.js","constants/localStrorageConstant.js","components/SearchBox.js","components/Header.js","actions/userActions.js","components/Rating.js","components/ProtectedLink.js","components/Product.js","constants/productConstants.js","actions/productActions.js","components/Paginate.js","components/Message.js","components/Loader.js","components/Slider.js","components/Title.js","components/Filter.js","screens/Home.js","screens/ProductDetails.js","constants/cartConstants.js","actions/cartActions.js","screens/Cart.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderAction.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/ListOrderScreen.js","screens/FilteredScreen.js","screens/ForgotPasswordScreen.js","screens/ResetPasswordScreen.js","components/RequestLogin.js","App.js","reducers/data/loadStaticModels.js","InitLoader.js","reducers/productReducers.js","reducers/data/modelReducer.js","store.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","_jsx","children","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_FORGOT_PASSWORD_REQUEST","USER_FORGOT_PASSWORD_SUCCESS","USER_FORGOT_PASSWORD_FAIL","USER_RESET_PASSWORD_REQUEST","USER_RESET_PASSWORD_SUCCESS","USER_RESET_PASSWORD_FAIL","USER_RESET_PASSWORD_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_ADMIN_DELETE_REQUEST","USER_ADMIN_DELETE_SUCCESS","USER_ADMIN_DELETE_FAIL","GET_USER_ADMIN_REQUEST","GET_USER_ADMIN_SUCCESS","GET_USER_ADMIN_FAIL","GET_USER_ADMIN_RESET","UPDATE_USER_ADMIN_REQUEST","UPDATE_USER_ADMIN_SUCCESS","UPDATE_USER_ADMIN_FAIL","UPDATE_USER_ADMIN_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","MY_ORDER_REQUEST","MY_ORDER_SUCCESS","MY_ORDER_FAIL","MY_ORDER_RESET","ORDER_GET_REQUEST","ORDER_GET_SUCCESS","ORDER_GET_FAIL","ORDER_UPDATE_REQUEST","ORDER_UPDATE_SUCCESS","ORDER_UPDATE_FAIL","ORDER_UPDATE_RESET","__STORENOTIFY_CARTITEMS","__STORENOTIFY_USERINFO","__STORENOTIFY_SHIPPING_ADDRESS","__STORENOTIFY_PAYMENT_METHOD","SearchBox","keywords","setKeywords","useState","history","useHistory","_jsxs","Form","onClick","value","trim","push","localStorage","setItem","inline","Control","type","name","onChange","e","target","placeholder","Button","variant","Header","dispatch","useDispatch","userInfo","useSelector","state","userLogin","Navbar","style","backgroundColor","color","expand","collapseOnSelect","LinkContainer","to","Brand","fontWeight","fontFamily","Toggle","Collapse","Nav","Link","NavDropdown","title","id","Item","logoutHandler","removeItem","isAdmin","Rating","_ref","text","defaultProps","ProtectedLink","urlToProtect","isAllowed","selfAllowed","setSelfAllowed","useEffect","u","getItem","undefined","JSON","parse","token","console","error","preventDefault","alert","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_FILTER_REQUEST","PRODUCT_FILTER_SUCCESS","PRODUCT_DETAIL_REQUEST","PRODUCT_DETAIL_SUCCESS","PRODUCT_DETAIL_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_REVIEW_REQUEST","PRODUCT_REVIEW_SUCCESS","PRODUCT_REVIEW_FAIL","PRODUCT_REVIEW_RESET","PRODUCT_TOP_RATED_REQUEST","PRODUCT_TOP_RATED_SUCCESS","default_keyword","listProducts","keyword","arguments","length","pageNumber","async","data","axios","get","payload","brands","resultbData","i","brand","mb","log","bData","Array","isArray","firstEl","keywordData","filter","item","pro","products","pages","page","response","message","listProductDetail","Paginate","Pagination","keys","map","x","active","Message","Alert","Loader","Spinner","animation","role","width","height","margin","display","Slider","process","topProd","productTopRated","loading","Carousel","interval","Image","alt","fluid","Caption","Helmet","Filter","categoryArr","brandArr","uniqueArr","arr","from","Set","forEach","_ref2","category","toLowerCase","show","setShow","setRating","setPrice","setBrand","setCategory","_Fragment","handleShow","Modal","onHide","handleClose","closeButton","onSubmit","filterProduct","Group","controlId","Label","index","Home","useParams","setAllowed","productList","ley","sm","md","lg","xl","ProductDetails","comment","setComment","productDetail","productReview","success","errorProductReview","loadingProductReview","qty","setQty","ListGroup","description","countInStock","disabled","addCartHandler","review","reviews","createdAt","substring","createReview","getState","config","headers","Authorization","post","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_ITEM_RESET","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","stringify","cart","cartItems","Cart","location","useLocation","search","split","removeCartItem","removeFromCart","rounded","fontSize","reduce","acc","toFixed","checkoutHandler","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","required","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","getOrderDetails","ProfileScreen","userDetails","user","myOrders","myOrder","loadingOrders","myOrderList","errorOrders","userUpdateProfile","updatedUser","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","Number","orderCreate","placeOrderHandler","orderDetails","orderItems","createOrder","OrderScreen","sdkReady","setSdkReady","orderPaid","setOrderPaid","orderPay","loadingPay","successPay","successOrder","updateOrder","setIsDelivered","window","Razorpay","url","script","document","createElement","body","appendChild","onload","loadScript","href","clientId","authConfig","amount","currency","orderId","options","key","order_id","prefill","notes","handler","razorpay_payment_id","paymentResult","razorpay_order_id","payment_id","signature","razorpay_signature","email_address","payOrder","open","deliveryHandler","UserListScreen","userList","userDelete","successDelete","users","deleteHandler","confirm","userId","delete","UserEditScreen","setIsAdmin","getUser","getUserFromId","getUserDetailAdmin","updateUserDetailAdmin","ProductListScreen","prodCreate","productCreate","loadingCreate","errorCreate","createdProd","successCreate","productDelete","deleteProductHandler","prodId","createProductHandler","ProductEditScreen","setImage","setCountInStock","setDescription","uploading","setUploading","laoding","loadingUpdate","errorUpdate","successUpdate","productUpdate","updateProduct","File","custom","file","files","formData","FormData","append","OrderListScreen","listOrder","orders","FilteredScreen","ForgotPasswordScreen","userForgotPassword","forgotPassword","ResetPasswordScreen","errPass","setErrPass","resetToken","userPasswordReset","resetPassword","RequestLogin","Date","toUTCString","App","Router","Route","path","component","exact","LOAD_MODELS_SUCCESS","InitLoader","initialState","vivo","oppo","motorola","samsung","reducer","combineReducers","action","exist","find","prod","models","updateUserFromId","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","Provider","getElementById"],"mappings":"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","file":"static/js/main.36031b2e.chunk.js","sourcesContent":["import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy;Store Notify</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_FORGOT_PASSWORD_REQUEST = \"USER_FORGOT_PASSWORD_REQUEST\";\r\nexport const USER_FORGOT_PASSWORD_SUCCESS = \"USER_FORGOT_PASSWORD_SUCCESS\";\r\nexport const USER_FORGOT_PASSWORD_FAIL = \"USER_FORGOT_PASSWORD_FAIL\";\r\n\r\nexport const USER_RESET_PASSWORD_REQUEST = \"USER_RESET_PASSWORD_REQUEST\";\r\nexport const USER_RESET_PASSWORD_SUCCESS = \"USER_RESET_PASSWORD_SUCCESS\";\r\nexport const USER_RESET_PASSWORD_FAIL = \"USER_RESET_PASSWORD_FAIL\";\r\nexport const USER_RESET_PASSWORD_RESET = \"USER_RESET_PASSWORD_RESET\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\n// Admin Access\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_ADMIN_DELETE_REQUEST = \"USER_ADMIN_DELETE_REQUEST\";\r\nexport const USER_ADMIN_DELETE_SUCCESS = \"USER_ADMIN_DELETE_SUCCESS\";\r\nexport const USER_ADMIN_DELETE_FAIL = \"USER_ADMIN_DELETE_FAIL\";\r\n\r\nexport const GET_USER_ADMIN_REQUEST = \"GET_USER_ADMIN_REQUEST\";\r\nexport const GET_USER_ADMIN_SUCCESS = \"GET_USER_ADMIN_SUCCESS\";\r\nexport const GET_USER_ADMIN_FAIL = \"GET_USER_ADMIN_FAIL\";\r\nexport const GET_USER_ADMIN_RESET = \"GET_USER_ADMIN_RESET\";\r\n\r\nexport const UPDATE_USER_ADMIN_REQUEST = \"UPDATE_USER_ADMIN_REQUEST\";\r\nexport const UPDATE_USER_ADMIN_SUCCESS = \"UPDATE_USER_ADMIN_SUCCESS\";\r\nexport const UPDATE_USER_ADMIN_FAIL = \"UPDATE_USER_ADMIN_FAIL\";\r\nexport const UPDATE_USER_ADMIN_RESET = \"UPDATE_USER_ADMIN_RESET\";\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const MY_ORDER_REQUEST = \"MY_ORDER_REQUEST\";\r\nexport const MY_ORDER_SUCCESS = \"MY_ORDER_SUCCESS\";\r\nexport const MY_ORDER_FAIL = \"MY_ORDER_FAIL\";\r\nexport const MY_ORDER_RESET = \"MY_ORDER_RESET\";\r\n\r\nexport const ORDER_GET_REQUEST = \"ORDER_GET_REQUEST\";\r\nexport const ORDER_GET_SUCCESS = \"ORDER_GET_SUCCESS\";\r\nexport const ORDER_GET_FAIL = \"ORDER_GET_FAIL\";\r\n\r\nexport const ORDER_UPDATE_REQUEST = \"ORDER_UPDATE_REQUEST\";\r\nexport const ORDER_UPDATE_SUCCESS = \"ORDER_UPDATE_SUCCESS\";\r\nexport const ORDER_UPDATE_FAIL = \"ORDER_UPDATE_FAIL\";\r\nexport const ORDER_UPDATE_RESET = \"ORDER_UPDATE_RESET\";\r\n","export const __STORENOTIFY_CARTITEMS = \"__STORENOTIFY_CARTITEMS\";\r\nexport const __STORENOTIFY_USERINFO = \"__STORENOTIFY_USERINFO\";\r\nexport const __STORENOTIFY_SHIPPING_ADDRESS = \"__STORENOTIFY_SHIPPING_ADDRESS\";\r\nexport const __STORENOTIFY_PAYMENT_METHOD = \"__STORENOTIFY_PAYMENT_METHOD\";\r\n","import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../styles/search-custom.css';\r\nconst SearchBox = () => {\r\n  const [keywords, setKeywords] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const submitHandler = value => {\r\n    if (keywords.trim()) {\r\n      history.push(`/search/${keywords}`);\r\n      localStorage.setItem(\"keywords\", keywords);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onClick={submitHandler} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={e => {\r\n          setKeywords(e.target.value);\r\n        }}\r\n        placeholder=\"Search Products\"\r\n        className=\"ml-sm-2 ml-sm-5 w-50 search-input \"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"\" className=\"p-2 btn-custom\">{/*outline-success */}\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport '../styles/header.css';\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userInfo = useSelector(state => state.userLogin.userInfo);\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push(\"/login\");\r\n  };\r\n//bg=\"dark\" variant=\"dark\"\r\n  return (\r\n    <header>\r\n      <Navbar style={{ backgroundColor: \"#cfecfc\", color: \"#343a40\" }}\r\n  variant=\"light\"  expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand style={{ color: '#a5fffc' }} ><span  style={{ color: '#0831ff' , fontWeight: '800' ,fontFamily: 'Nunito, sans-serif' } }>Store Notify</span></Navbar.Brand>\r\n          </LinkContainer>\r\n          <SearchBox />\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse>\r\n            <Nav  className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link >\r\n                  <i style={{ color: '#0831ff' } } className=\"fas fa-shopping-cart\"></i><span  style={{ color: '#0831ff' } }>Cart</span>\r\n                </Nav.Link> \r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown style={{ color: '#0831ff' }} title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item><span  style={{ color: '#0831ff' } }>Profile</span></NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                  <span  style={{ color: '#0831ff' } }>Logout</span>\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link id=\"signin\">\r\n                    <i style={{ color: '#0831ff' } } className=\"fas fa-user\" ></i><span  style={{ color: '#0831ff' } }>Sign In</span>\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"admin\" id=\"admin\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users List</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {\r\n  GET_USER_ADMIN_FAIL,\r\n  GET_USER_ADMIN_REQUEST,\r\n  GET_USER_ADMIN_RESET,\r\n  GET_USER_ADMIN_SUCCESS,\r\n  UPDATE_USER_ADMIN_FAIL,\r\n  UPDATE_USER_ADMIN_REQUEST,\r\n  UPDATE_USER_ADMIN_RESET,\r\n  UPDATE_USER_ADMIN_SUCCESS,\r\n  USER_ADMIN_DELETE_FAIL,\r\n  USER_ADMIN_DELETE_REQUEST,\r\n  USER_ADMIN_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_FORGOT_PASSWORD_FAIL,\r\n  USER_FORGOT_PASSWORD_REQUEST,\r\n  USER_FORGOT_PASSWORD_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_RESET_PASSWORD_FAIL,\r\n  USER_RESET_PASSWORD_REQUEST,\r\n  USER_RESET_PASSWORD_RESET,\r\n  USER_RESET_PASSWORD_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport {\r\n  MY_ORDER_RESET,\r\n  ORDER_UPDATE_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport { __STORENOTIFY_USERINFO } from \"../constants/localStrorageConstant\";\r\nimport axios from \"axios\";\r\n\r\nconst login = (email, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(process.env.REACT_APP_SERVER_URL+\r\n      \"/api/user/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(__STORENOTIFY_USERINFO, JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst forgotPassword = email => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_FORGOT_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(process.env.REACT_APP_SERVER_URL+\r\n      \"/api/user/forgotpassword\",\r\n      { email },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_FORGOT_PASSWORD_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_FORGOT_PASSWORD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst resetPassword = (resetToken, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_RESET_PASSWORD_RESET,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.put(process.env.REACT_APP_SERVER_URL+\r\n      \"/api/user/resetpassword\",\r\n      { resetToken, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_RESET_PASSWORD_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(__STORENOTIFY_USERINFO, JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_RESET_PASSWORD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst register = (name, email, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(process.env.REACT_APP_SERVER_URL+\r\n      \"/api/user/register\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(__STORENOTIFY_USERINFO, JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst getUserDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(process.env.REACT_APP_SERVER_URL+`/api/user/${id}`, config);\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateUserProfile = user => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.put(process.env.REACT_APP_SERVER_URL+`/api/user/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(__STORENOTIFY_USERINFO, JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Admin Actions\r\nconst getUserList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.get(process.env.REACT_APP_SERVER_URL+\"/api/user/users\", config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst getUserDetailAdmin = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_USER_ADMIN_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(process.env.REACT_APP_SERVER_URL+`/api/user/users/${id}`, config);\r\n    dispatch({\r\n      type: GET_USER_ADMIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_USER_ADMIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateUserDetailAdmin = (user, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_USER_ADMIN_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.put(process.env.REACT_APP_SERVER_URL+`/api/user/users/${id}`, user, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_USER_ADMIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_USER_ADMIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_USER_ADMIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst deleteUser = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_ADMIN_DELETE_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    await axios.delete(process.env.REACT_APP_SERVER_URL+`/api/user/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_ADMIN_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_ADMIN_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst logout = () => dispatch => {\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n  dispatch({ type: MY_ORDER_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  dispatch({ type: GET_USER_ADMIN_RESET });\r\n  dispatch({ type: UPDATE_USER_ADMIN_RESET });\r\n  dispatch({ type: ORDER_UPDATE_RESET });\r\n  dispatch({ type: USER_RESET_PASSWORD_REQUEST });\r\n  localStorage.removeItem(__STORENOTIFY_USERINFO);\r\n};\r\n\r\nexport {\r\n  login,\r\n  logout,\r\n  register,\r\n  getUserDetails,\r\n  updateUserProfile,\r\n  getUserList,\r\n  getUserDetailAdmin,\r\n  deleteUser,\r\n  updateUserDetailAdmin,\r\n  forgotPassword,\r\n  resetPassword,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n          style={{ color }}\r\n        />\r\n      </span>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n          style={{ color }}\r\n        />\r\n      </span>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n          style={{ color }}\r\n        />\r\n      </span>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n          style={{ color }}\r\n        />\r\n      </span>\r\n      <span>\r\n        <i\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n          style={{ color }}\r\n        />\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: \"#f8e825\",\r\n  value: 0,\r\n};\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n"," \r\n \r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { __STORENOTIFY_USERINFO } from \"../constants/localStrorageConstant\";\r\nconst ProtectedLink = ({ children, urlToProtect ,isAllowed }) => {\r\n  const history = useHistory();\r\n  const [selfAllowed, setSelfAllowed] = useState(false);\r\n  useEffect(() => {\r\n    // re-chekc if the user object and token is presnet\r\n    let u  = localStorage.getItem(__STORENOTIFY_USERINFO);\r\n    /*\r\n    {\"_id\":\"6819f27a808190ec8f62a952\",\"name\":\"Shaik\",\"email\":\"shaikh.abbas2609@gmail.com\",\r\n    \"isAdmin\":false,\r\n    \"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MTlmMjdhODA4MTkwZWM4ZjYyYTk1MiIsImlhdCI6MTc0NjUzNTE5MCwiZXhwIjoxNzQ2NTM4NzkwfQ.ErL1gT5_dhmoI5-yrtIpa-2VTrc-hTYLhHtZcGDPIwk\"}\r\n    \r\n    */\r\n   if (u  !== null && u !== undefined) {\r\n     try {\r\n        u = JSON.parse(u);\r\n        if (!u.token) {\r\n        // alert(\"Please login to access this page.\");\r\n        // history.push(\"/requestlogin\");\r\n        setSelfAllowed(true);\r\n        }\r\n     } catch (e) {\r\n        console.error(\"Invalid user object in localStorage\");\r\n      }\r\n    }  \r\n    \r\n  },[])\r\n  const handleClick = (e) => {\r\n    if (!selfAllowed) {\r\n\r\n      e.preventDefault(); // Stop navigation\r\n      alert(\"Please login to access this page.\");\r\n    } else {\r\n        history.push(urlToProtect);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link to={urlToProtect} onClick={handleClick}>\r\n       {children}\r\n    </Link>\r\n  );\r\n};\r\nexport default ProtectedLink;\r\n","import { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\nimport   ProtectedLink   from \"./ProtectedLink\";\r\n\r\nconst Product = ({ product , isAllowed}) => {\r\n  // to={`/product/${product._id}`}\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <ProtectedLink urlToProtect={`/product/${product._id}`} isAllowed={isAllowed}   >\r\n        <Card.Img src={product.image} variant=\"top\" />\r\n      </ProtectedLink>\r\n      <Card.Body>\r\n        <ProtectedLink urlToProtect={`/product/${product._id}`} isAllowed={isAllowed}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </ProtectedLink>\r\n        <Card.Text as=\"div\">\r\n          <Rating value={product.rating} text={product.numReviews} />\r\n        </Card.Text>\r\n        <Card.Text as=\"h3\">Rs {product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_FILTER_REQUEST = \"PRODUCT_FILTER_REQUEST\";\r\nexport const PRODUCT_FILTER_SUCCESS = \"PRODUCT_FILTER_SUCCESS\";\r\nexport const PRODUCT_FILTER_FAIL = \"PRODUCT_FILTER_FAIL\";\r\n\r\nexport const PRODUCT_DETAIL_REQUEST = \"PRODUCT_DETAIL_REQUEST\";\r\nexport const PRODUCT_DETAIL_SUCCESS = \"PRODUCT_DETAIL_SUCCESS\";\r\nexport const PRODUCT_DETAIL_FAIL = \"PRODUCT_DETAIL_FAIL\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\nexport const PRODUCT_REVIEW_REQUEST = \"PRODUCT_REVIEW_REQUEST\";\r\nexport const PRODUCT_REVIEW_SUCCESS = \"PRODUCT_REVIEW_SUCCESS\";\r\nexport const PRODUCT_REVIEW_FAIL = \"PRODUCT_REVIEW_FAIL\";\r\nexport const PRODUCT_REVIEW_RESET = \"PRODUCT_REVIEW_RESET\";\r\n\r\nexport const PRODUCT_TOP_RATED_REQUEST = \"PRODUCT_TOP_RATED_REQUEST\";\r\nexport const PRODUCT_TOP_RATED_SUCCESS = \"PRODUCT_TOP_RATED_SUCCESS\";\r\nexport const PRODUCT_TOP_RATED_FAIL = \"PRODUCT_TOP_RATED_FAIL\";\r\n","import {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAIL_REQUEST,\r\n  PRODUCT_DETAIL_SUCCESS,\r\n  PRODUCT_DETAIL_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_REVIEW_REQUEST,\r\n  PRODUCT_REVIEW_SUCCESS,\r\n  PRODUCT_REVIEW_FAIL,\r\n  PRODUCT_TOP_RATED_REQUEST,\r\n  PRODUCT_TOP_RATED_SUCCESS,\r\n  PRODUCT_TOP_RATED_FAIL,\r\n  PRODUCT_FILTER_REQUEST,\r\n  PRODUCT_FILTER_SUCCESS,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nlet default_keyword = \"vivo\";\r\nconst listProducts =\r\n  (keyword = \"\", pageNumber = 1) =>\r\n  async dispatch => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n      default_keyword = keyword;\r\n      const { data } = await axios.get(\r\n        process.env.REACT_APP_SERVER_URL+`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n      const brands = ['vivo', 'oppo', 'motorola', 'samsung'];\r\n      let resultbData = [];\r\n      for(let i = 0; i < brands.length; i++){\r\n        let brand = brands[i] ;\r\n         let mb = localStorage.getItem(brand);\r\n         if(mb !== undefined && mb !== null){\r\n             console.log(mb); \r\n             let bData = JSON.parse(mb);\r\n             resultbData.push(bData);\r\n         }\r\n      }\r\n\r\n\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: resultbData[keyword] });\r\n      \r\n    } catch (error) {\r\n\r\n      const brands = ['vivo', 'oppo', 'motorola', 'samsung'];\r\n      let resultbData = [];\r\n      for(let i = 0; i < brands.length; i++){\r\n        let brand = brands[i] ;\r\n         let mb = localStorage.getItem(brand);\r\n         if(mb !== undefined && mb !== null){\r\n            \r\n             let bData = JSON.parse(mb);\r\n             if(Array.isArray(bData)){\r\n               let firstEl = bData[0];;\r\n                   console.log(firstEl); \r\n              \r\n             }\r\n             resultbData.push({ brand : brand , data : bData });\r\n         }\r\n      }\r\n     let keywordData = resultbData.filter((item) =>  item.brand === keyword\r\n      );\r\n      console.log(keywordData[0].data); \r\n      let pro = { products : keywordData[0].data  , pages :1 , page:1};\r\n      console.log(pro.products); \r\n      //dispatch({ type: PRODUCT_LIST_SUCCESS, payload: pro });\r\n\r\n      if( pro == undefined && pro == null){\r\n        if (keywordData.length === 0) {\r\n          \r\n        }else {\r\n          dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n              error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n          });  \r\n        }\r\n      \r\n      }\r\n\r\n     \r\n    }\r\n  };\r\n\r\nconst topRatedProducts = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_RATED_REQUEST });\r\n\r\n    const { data } = await axios.get(process.env.REACT_APP_SERVER_URL+`/api/products/toprated`);\r\n\r\n    dispatch({ type: PRODUCT_TOP_RATED_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const brands = ['vivo', 'oppo', 'motorola', 'samsung'];\r\n    let resultbData = [];\r\n    for(let i = 0; i < brands.length; i++){\r\n      let brand = brands[i] ;\r\n       let mb = localStorage.getItem(brand);\r\n       if(mb !== undefined && mb !== null){\r\n          \r\n           let bData = JSON.parse(mb);\r\n           if(Array.isArray(bData)){\r\n             let firstEl = bData[0];;\r\n                 console.log(firstEl); \r\n            \r\n           }\r\n           resultbData.push({ brand : brand , data : bData });\r\n       }\r\n    }\r\n      \r\n    default_keyword = (default_keyword !== null && default_keyword !== undefined) ? default_keyword : 'oppo';\r\n\r\n    let keywordData = resultbData.filter((item) =>  item.brand ===default_keyword\r\n    );\r\n    console.log(keywordData[0].data); \r\n    let pro = { products : keywordData[0].data , pages :1 , page:1};\r\n    console.log(\"TOP RATED   \"+ pro.products); \r\n    dispatch({ type: PRODUCT_TOP_RATED_SUCCESS, payload: pro });\r\n\r\n    if( pro == undefined && pro == null){\r\n      if (keywordData.length === 0) {\r\n        \r\n      }else {\r\n        dispatch({\r\n          type: PRODUCT_LIST_FAIL,\r\n          payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        });  \r\n      }\r\n    \r\n    }\r\n\r\n\r\n\r\n   /* dispatch({\r\n      type: PRODUCT_TOP_RATED_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });*/\r\n  }\r\n};\r\n\r\nconst filterProduct =\r\n  (rating = \"\", price = \"\", brand = \"\", category = \"\") =>\r\n  async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_FILTER_REQUEST,\r\n      });\r\n\r\n      const { data } = await axios.get(\r\n        process.env.REACT_APP_SERVER_URL+`/api/products/filter?rating=${rating}&price=${price}&brand=${brand}&category=${category}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_FILTER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DETAIL_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nconst listProductDetail = id => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAIL_REQUEST });\r\n\r\n    const { data } = await axios.get(process.env.REACT_APP_SERVER_URL+`/api/products/${id}`);\r\n    dispatch({ type: PRODUCT_DETAIL_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Admin Roles\r\n\r\nconst createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.post(process.env.REACT_APP_SERVER_URL+`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateProduct = (product, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(process.env.REACT_APP_SERVER_URL+`/api/products/${id}`, product, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst deleteProduct = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    await axios.delete(process.env.REACT_APP_SERVER_URL+`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst createReview = (review, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_REVIEW_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"Application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      process.env.REACT_APP_SERVER_URL+`/api/products/${id}/review`,\r\n      {\r\n        rating: review.rating,\r\n        comment: review.comment,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_REVIEW_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport {\r\n  listProducts,\r\n  listProductDetail,\r\n  deleteProduct,\r\n  createProduct,\r\n  updateProduct,\r\n  createReview,\r\n  topRatedProducts,\r\n  filterProduct,\r\n};\r\n","import { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keywords = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map(x => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keywords\r\n                  ? `/search/${keywords}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/page/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return (\r\n    <Alert className=\"alert-setting\" variant={variant}>\r\n      {children}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import { Spinner } from \"react-bootstrap\";\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading ...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { Carousel, Image } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { topRatedProducts } from \"../actions/productActions\";\r\n\r\nconst Slider = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(topRatedProducts());\r\n  }, [dispatch]);\r\n\r\n  const topProd = useSelector(state => state.productTopRated);\r\n  const { loading, error, products } = topProd;\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel className=\"bg-dark\">\r\n      {products &&\r\n        products.map(product => (\r\n          <Carousel.Item key={product._id} interval={5000}>\r\n            <Link to={`/product/${product._id}`}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n              <Carousel.Caption className=\"carousel-caption\">\r\n                <h2>\r\n                  {product.name} ({product.brand})\r\n                </h2>\r\n              </Carousel.Caption>\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import { Helmet } from \"react-helmet\";\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nTitle.defaultProps = {\r\n  title: \"Store Notify\",\r\n};\r\n\r\nexport default Title;\r\n","import { useState } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { filterProduct } from \"../actions/productActions\";\r\n\r\nconst Filter = ({ products }) => {\r\n  let categoryArr = [];\r\n  let brandArr = [];\r\n\r\n  products.forEach(({ category, brand }) => {\r\n    categoryArr.push(category.toLowerCase());\r\n    brandArr.push(brand.toLowerCase());\r\n  });\r\n\r\n  function uniqueArr(arr) {\r\n    return Array.from(new Set(arr));\r\n  }\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [rating, setRating] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(filterProduct(rating, price, brand, category));\r\n    history.push(\"/filter\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow} variant=\"dark\">\r\n        Filter products\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>Filter By</Modal.Header>\r\n        <Modal.Body>\r\n          {products && (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"rating\">\r\n                <Form.Label>Rating (Minimum)</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Filter by rating\"\r\n                  value={rating}\r\n                  onChange={e => setRating(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"price\">\r\n                <Form.Label>Price (Maximum)</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Filter by Price\"\r\n                  value={price}\r\n                  onChange={e => setPrice(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"category\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={category}\r\n                  onChange={e => setCategory(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select Category</option>\r\n                  {uniqueArr(categoryArr).map((category, index) => (\r\n                    <option key={index} value={category}>\r\n                      {category}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"brand\">\r\n                <Form.Label>Brand</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={brand}\r\n                  onChange={e => setBrand(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select Brand</option>\r\n                  {uniqueArr(brandArr).map((brand, index) => (\r\n                    <option key={index} value={brand}>\r\n                      {brand}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Button variant=\"dark\" type=\"submit\">\r\n                Filter\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport { __STORENOTIFY_USERINFO } from \"../constants/localStrorageConstant\";\r\nimport {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAIL_REQUEST,\r\n  PRODUCT_DETAIL_SUCCESS,\r\n  PRODUCT_DETAIL_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_REVIEW_REQUEST,\r\n  PRODUCT_REVIEW_SUCCESS,\r\n  PRODUCT_REVIEW_FAIL,\r\n  PRODUCT_TOP_RATED_REQUEST,\r\n  PRODUCT_TOP_RATED_SUCCESS,\r\n  PRODUCT_TOP_RATED_FAIL,\r\n  PRODUCT_FILTER_REQUEST,\r\n  PRODUCT_FILTER_SUCCESS,\r\n} from \"../constants/productConstants\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Slider from \"../components/Slider\";\r\nimport Title from \"../components/Title\";\r\nimport Filter from \"../components/Filter\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { keywords, pageNumber } = useParams();\r\n  const [isAllowed , setAllowed] = useState(true);\r\n  const productList = useSelector(state => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n      // re-chekc if the user object and token is presnet\r\n      let u  = localStorage.getItem(__STORENOTIFY_USERINFO);\r\n      /*\r\n      {\"_id\":\"6819f27a808190ec8f62a952\",\"name\":\"Shaik\",\"email\":\"shaikh.abbas2609@gmail.com\",\r\n      \"isAdmin\":false,\r\n      \"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MTlmMjdhODA4MTkwZWM4ZjYyYTk1MiIsImlhdCI6MTc0NjUzNTE5MCwiZXhwIjoxNzQ2NTM4NzkwfQ.ErL1gT5_dhmoI5-yrtIpa-2VTrc-hTYLhHtZcGDPIwk\"}\r\n      \r\n      */\r\n      if (u  !== null && u !== undefined) {\r\n        u = JSON.parse(u);\r\n        if (u.token !== null && u.token !== undefined) {\r\n         //  alert(\"Please login to access this page.\");\r\n          //history.push(\"/requestlogin\");\r\n          setAllowed(true);\r\n        }\r\n        else {\r\n          setAllowed(true);\r\n        }\r\n      }  \r\n    if(keywords !== undefined && pageNumber !== undefined){\r\n      dispatch(listProducts(keywords, pageNumber));\r\n    }\r\n    else { // DEFAULT OPPO products \r\n    /*    const brands = ['vivo', 'oppo', 'motorola', 'samsung'];\r\n      let resultbData = [];\r\n      for(let i = 0; i < brands.length; i++){\r\n        let brand = brands[i] ;\r\n        let mb = localStorage.getItem(brand);\r\n        if(mb !== undefined && mb !== null){\r\n            \r\n            let bData = JSON.parse(mb);\r\n            if(Array.isArray(bData)){\r\n              let firstEl = bData[0];;\r\n                  console.log(firstEl); \r\n              \r\n            }\r\n            resultbData.push({ brand : brand , data : bData });\r\n        }\r\n      }\r\n    let keywordData = resultbData.filter((item) =>  item.brand === 'oppo'\r\n      );\r\n      console.log(keywordData[0].data); \r\n      let pro = { products : keywordData[0].data };\r\n      console.log(pro.products); */\r\n      let ley = localStorage.getItem(\"keywords\");\r\n      let default_keyword =   ley !== null && ley !== undefined ? ley : 'oppo';\r\n    dispatch(listProducts(default_keyword, pageNumber)  );\r\n    }\r\n  }, [dispatch, keywords, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify | Home\" />\r\n      {products && (\r\n        <>\r\n          {!keywords && <Slider />}\r\n          <h1>Latest Products</h1>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant=\"danger\">{error}</Message>\r\n          ) : (\r\n            <>\r\n              <Filter products={products} />\r\n              <Row>\r\n                {products.map(product => (\r\n                  <Col key={product._id} sm={12} md={6} lg={6} xl={3}>\r\n                    <Product product={product} isAllowed={isAllowed}/>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n              <Paginate\r\n                page={page}\r\n                pages={pages}\r\n                keywords={keywords ? keywords : \"\"}\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Rating from \"../components/Rating\";\r\nimport Title from \"../components/Title\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetail, createReview } from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { PRODUCT_REVIEW_RESET } from \"../constants/productConstants\";\r\n//import { useNavigate } from \"react-router-dom\"; \r\n//import { useHistory  } from \"react-router-dom\"; \r\n\r\nconst ProductDetails = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const productDetail = useSelector(state => state.productDetail);\r\n  const { loading, error, product } = productDetail;\r\n\r\n  const productReview = useSelector(state => state.productReview);\r\n  const {\r\n    success,\r\n    error: errorProductReview,\r\n    loading: loadingProductReview,\r\n  } = productReview;\r\n\r\n  const userInfo = useSelector(state => state.userLogin.userInfo);\r\n\r\n  useEffect(() => {\r\n    if(id !==null && id !==undefined){\r\n      dispatch(listProductDetail(id));\r\n    }\r\n    else{\r\n     \r\n     history.push(\"/requestlogin\"); \r\n    }\r\n    if (success) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({\r\n        type: PRODUCT_REVIEW_RESET,\r\n      });\r\n    }\r\n  \r\n  }, [id, dispatch, success]);\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const addCartHandler = () => {\r\n    history.push(`/cart/${id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    let rev = {\r\n      rating,\r\n      comment,\r\n    };\r\n    dispatch(createReview(rev, id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title title={product && product.name} />\r\n      <Link className=\"btn btn-light my-2\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image fluid src={product.image} alt={product.image} />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating value={product.rating} text={product.numReviews} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: Rs {product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price</Col>\r\n                      <Col>\r\n                        <strong>Rs {product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Brand</Col>\r\n                      <Col>{product.brand}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={e => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(x => {\r\n                              return (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      disabled={product.countInStock === 0}\r\n                      onClick={addCartHandler}\r\n                      className=\"btn-block btn-dark\"\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.review && product.reviews.length === 0 && (\r\n                <Message>No Reviews</Message>\r\n              )}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews &&\r\n                  product.reviews.map(review => (\r\n                    <ListGroup.Item key={review._id}>\r\n                      <strong>{review.name}</strong>\r\n                      <Rating value={review.rating} />\r\n                      <p>{review.createdAt.substring(0, 10)}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {success && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={e => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={e => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      <Link to=\"/login\">Please sign in to write a review</Link>\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_ITEM_RESET = \"CART_ITEM_RESET\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\nimport {\r\n  __STORENOTIFY_CARTITEMS,\r\n  __STORENOTIFY_PAYMENT_METHOD,\r\n  __STORENOTIFY_SHIPPING_ADDRESS,\r\n} from \"../constants/localStrorageConstant\";\r\n\r\nconst addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(process.env.REACT_APP_SERVER_URL+`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\r\n    __STORENOTIFY_CARTITEMS,\r\n    JSON.stringify(getState().cart.cartItems)\r\n  );\r\n};\r\n\r\nconst removeFromCart = id => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\r\n    __STORENOTIFY_CARTITEMS,\r\n    JSON.stringify(getState().cart.cartItems)\r\n  );\r\n};\r\n\r\nconst saveShippingAddress = data => dispatch => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(__STORENOTIFY_SHIPPING_ADDRESS, JSON.stringify(data));\r\n};\r\n\r\nconst savePaymentMethod = data => dispatch => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(__STORENOTIFY_PAYMENT_METHOD, JSON.stringify(data));\r\n};\r\n\r\nexport { addToCart, removeFromCart, saveShippingAddress, savePaymentMethod };\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const { id } = useParams();\r\n  const location = useLocation();\r\n  const qty = location.search ? +location.search.split(\"=\")[1] : 1;\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector(state => state.cart.cartItems);\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(addToCart(id, qty));\r\n    }\r\n  }, [dispatch, id, qty]);\r\n\r\n  const removeCartItem = id => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Cart\" />\r\n      <Row>\r\n        <Col md={8}>\r\n          <h2>Your Cart</h2>\r\n          {cartItems.length === 0 ? (\r\n            <Message>\r\n              Your Cart is Empty <Link to=\"/\">GO BACK</Link>\r\n            </Message>\r\n          ) : (\r\n            <ListGroup variant=\"flush\">\r\n              {cartItems.map(item => (\r\n                <ListGroup.Item key={item.product}>\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Image src={item.image} alt={item.name} fluid rounded />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                    </Col>\r\n                    <Col md={2}>Rs {item.price}</Col>\r\n                    {/* <Col md={1}>{item.qty}</Col> */}\r\n                    <Col md={3}>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={item.qty}\r\n                        onChange={e =>\r\n                          dispatch(addToCart(item.product, +e.target.value))\r\n                        }\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map(x => {\r\n                          return (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={() => removeCartItem(item.product)}\r\n                      >\r\n                        <i\r\n                          style={{ fontSize: \"15px\" }}\r\n                          className=\"fas fa-trash\"\r\n                        ></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>\r\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}\r\n                  ) items\r\n                </h2>\r\n                Rs\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toFixed(2)}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Proceed to checkout\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { login } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Title from \"../components/Title\";\r\nimport '../styles/login.css';\r\nimport '../styles/search-custom.css';\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector(state => state.userLogin);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Log-In\" />\r\n      <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Enter your email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Enter your password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" className=\"btn-custom\" variant=\"primary\">\r\n            Sign In\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Forgot Password? <Link to=\"/forgotpassword\">Forgot Password</Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            New Customer?{\" \"}\r\n            <Link\r\n              to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n            >\r\n              Register\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst RegisterScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n  const { userInfo, loading, error } = userRegister;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password does not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Register\" />\r\n      <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Enter your email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Enter your password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={e => setConfirmPassword(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Have an account?{\" \"}\r\n            <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n              Login\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n  MY_ORDER_FAIL,\r\n  MY_ORDER_REQUEST,\r\n  MY_ORDER_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_GET_FAIL,\r\n  ORDER_GET_REQUEST,\r\n  ORDER_GET_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_UPDATE_FAIL,\r\n  ORDER_UPDATE_REQUEST,\r\n  ORDER_UPDATE_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\nimport { CART_ITEM_RESET } from \"../constants/cartConstants\";\r\nimport { __STORENOTIFY_CARTITEMS } from \"../constants/localStrorageConstant\";\r\nconst createOrder = order => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/orders\", order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst getOrderDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n    const userInfo = getState().userLogin.userInfo;\r\n    const config = {\r\n      headers: {\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(process.env.REACT_APP_SERVER_URL+`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      process.env.REACT_APP_SERVER_URL+`/api/orders/${id}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: CART_ITEM_RESET,\r\n    });\r\n\r\n    localStorage.removeItem(__STORENOTIFY_CARTITEMS);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst getMyOrder = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MY_ORDER_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/orders/myorders\", config);\r\n\r\n    dispatch({\r\n      type: MY_ORDER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MY_ORDER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Admin Roles\r\nconst listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_GET_REQUEST,\r\n    });\r\n    const userInfo = getState().userLogin.userInfo;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/orders\", config);\r\n\r\n    dispatch({\r\n      type: ORDER_GET_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateOrder = (isDelivered, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n\r\n    console.log(isDelivered);\r\n    console.log(id);\r\n    const { data } = await axios.put(process.env.REACT_APP_SERVER_URL+`/api/orders/${id}`, isDelivered, config);\r\n\r\n    dispatch({\r\n      type: ORDER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport {\r\n  createOrder,\r\n  getOrderDetails,\r\n  payOrder,\r\n  getMyOrder,\r\n  listOrders,\r\n  updateOrder,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { getMyOrder } from \"../actions/orderAction\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const { user, loading, error } = userDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const myOrders = useSelector(state => state.myOrder);\r\n  const {\r\n    loading: loadingOrders,\r\n    myOrders: myOrderList,\r\n    error: errorOrders,\r\n  } = myOrders;\r\n\r\n  const success = useSelector(state => state.userUpdateProfile.success);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(getMyOrder());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password does not match\");\r\n    } else {\r\n      const updatedUser = {\r\n        _id: user._id,\r\n        name,\r\n        email,\r\n        password,\r\n      };\r\n      dispatch(updateUserProfile(updatedUser));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title title={userInfo && `Store Notify| ${userInfo.name}`} />\r\n      <Row>\r\n        <Col md={3}>\r\n          <h2>Users profile</h2>\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {success && (\r\n            <Message variant=\"info\">Profile updated Successfully</Message>\r\n          )}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Enter your email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Enter your password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChange={e => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n          <h2>My Orders</h2>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : errorOrders ? (\r\n            <Message variant=\"danger\">{errorOrders}</Message>\r\n          ) : (\r\n            <Table striped bordered hover responsive className=\"table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>DATE</th>\r\n                  <th>TOTAL</th>\r\n                  <th>PAID</th>\r\n                  <th>DELIVERED</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {myOrderList.map(order => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times text-center\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button className=\"btn-sm\" variant=\"dark\">\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst ShippingScreen = () => {\r\n  const shippingAddress = useSelector(state => state.cart.shippingAddress);\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address || \"\");\r\n  const [city, setCity] = useState(shippingAddress.city || \"\");\r\n  const [postalCode, setPostalCode] = useState(\r\n    shippingAddress.postalCode || \"\"\r\n  );\r\n  const [country, setCountry] = useState(shippingAddress.country || \"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const addr = {\r\n      address,\r\n      city,\r\n      postalCode,\r\n      country,\r\n    };\r\n    dispatch(saveShippingAddress(addr));\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Shipping\" />\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"address\">\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Address\"\r\n              value={address}\r\n              onChange={e => setAddress(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"city\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter City\"\r\n              value={city}\r\n              onChange={e => setCity(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"postalCode\">\r\n            <Form.Label>Postal Code</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Postal Code\"\r\n              value={postalCode}\r\n              onChange={e => setPostalCode(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"country\">\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Country\"\r\n              value={country}\r\n              onChange={e => setCountry(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst PaymentScreen = () => {\r\n  const shippingAddress = useSelector(state => state.cart.shippingAddress);\r\n\r\n  const history = useHistory();\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"Razorpay\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Payment\" />\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 />\r\n        <h1>Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label as=\"legend\">Select Method</Form.Label>\r\n            <Col>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"Razorpay UPI Debit Credit Card\"\r\n                id=\"Razorpay\"\r\n                name=\"paymentMethod\"\r\n                value=\"Razorpay\"\r\n                checked\r\n                onChange={e => setPaymentMethod(e.target.value)}\r\n              ></Form.Check>\r\n            </Col>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import { Row, Col, Image, ListGroup, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderAction\";\r\nimport { useEffect } from \"react\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst PlaceOrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector(state => state.cart);\r\n  const history = useHistory();\r\n\r\n  // Calculate Prices\r\n  cart.itemsPrice = cart.cartItems.reduce(\r\n    (acc, item) => acc + item.price * item.qty,\r\n    0\r\n  );\r\n\r\n  cart.shippingPrice = cart.itemsPrice > 1500 ? 0 : 150;\r\n  cart.taxPrice = Number((0.05 * cart.itemsPrice).toFixed(2));\r\n  cart.totalPrice = Number(\r\n    cart.itemsPrice + cart.shippingPrice + cart.taxPrice\r\n  );\r\n\r\n  const orderCreate = useSelector(state => state.orderCreate);\r\n  const { success, order, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    } // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    let orderDetails = {\r\n      orderItems: cart.cartItems,\r\n      shippingAddress: cart.shippingAddress,\r\n      paymentMethod: cart.paymentMethod,\r\n      itemsPrice: cart.itemsPrice,\r\n      shippingPrice: cart.shippingPrice,\r\n      taxPrice: cart.taxPrice,\r\n      totalPrice: cart.totalPrice,\r\n    };\r\n    dispatch(createOrder(orderDetails));\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Confirm Order\" />\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address},{cart.shippingAddress.city},\r\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup.Item>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image src={item.image} alt={item.name} fluid />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x Rs {item.price} = Rs{\" \"}\r\n                          {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>Rs {cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>Rs {cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>Rs {cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>Rs {cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                  className=\"btn-block\"\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { getOrderDetails, payOrder, updateOrder } from \"../actions/orderAction\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_RESET,\r\n  ORDER_PAY_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst OrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [orderPaid, setOrderPaid] = useState(false);\r\n\r\n  const userInfo = useSelector(state => state.userLogin.userInfo);\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails);\r\n  const { loading, error, order } = orderDetails;\r\n\r\n  const orderPay = useSelector(state => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const successOrder = useSelector(state => state.updateOrder.success);\r\n\r\n  const [isDelivered, setIsDelivered] = useState(false);\r\n\r\n  async function displayRazorpay() {\r\n    const { data: clientId } = await axios.get(\"/api/config/razorpay\");\r\n    const authConfig = {\r\n      headers: {\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.post(process.env.REACT_APP_SERVER_URL+`/api/orders/${id}`, \"\", authConfig);\r\n    const { amount, currency, orderId } = data;\r\n\r\n    const options = {\r\n      key: clientId,\r\n      amount: amount,\r\n      currency: currency,\r\n      name: id,\r\n      description: id,\r\n      order_id: orderId,\r\n      prefill: {\r\n        name: userInfo.name,\r\n        email: userInfo.email,\r\n      },\r\n      notes: {\r\n        shippingAddress: orderDetails.order.shippingAddress.address,\r\n      },\r\n      handler: function (response) {\r\n        if (response.razorpay_payment_id) {\r\n          const paymentResult = {\r\n            order_id: response.razorpay_order_id,\r\n            payment_id: response.razorpay_payment_id,\r\n            signature: response.razorpay_signature,\r\n            email_address: userInfo.email,\r\n          };\r\n          setOrderPaid(true);\r\n          dispatch(payOrder(id, paymentResult));\r\n          dispatch({ type: ORDER_CREATE_RESET });\r\n        }\r\n      },\r\n    };\r\n\r\n    const paymentWindow = new window.Razorpay(options);\r\n    paymentWindow.open();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const loadScript = url => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = url;\r\n      document.body.appendChild(script);\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n    };\r\n\r\n    if (!order || successPay || order._id !== id) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(id));\r\n    } else if (!order.isPaid || !window.Razorpay) {\r\n      loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\r\n    }\r\n  }, [dispatch, id, order, userInfo, history, successPay]);\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems.reduce(\r\n      (acc, item) => acc + item.price * item.qty,\r\n      0\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (successOrder) {\r\n      dispatch(getOrderDetails(id));\r\n    }\r\n  }, [successOrder, dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (order && order.isDelivered) {\r\n      setIsDelivered(order.isDelivered);\r\n    }\r\n  }, [order]);\r\n\r\n  const deliveryHandler = () => {\r\n    dispatch(updateOrder({ isDelivered }, id));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <Title title=\"Store Notify| Order details\" />\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name:</strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city},\r\n                {order.shippingAddress.postalCode},\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered at {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">\r\n                  Order Paid at {order.paidAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Order Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup.Item>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image src={item.image} alt={item.name} fluid />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x Rs{item.price} = Rs\r\n                          {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>Rs{order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>Rs{order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>Rs{order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>Rs{order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <>\r\n                      {!userInfo.isAdmin && (\r\n                        <Button variant=\"primary\" onClick={displayRazorpay}>\r\n                          Pay Now\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {orderPaid && (\r\n                <Message variant=\"info\">Payment Done Sucessfully</Message>\r\n              )}\r\n              {userInfo.isAdmin && order.isPaid && (\r\n                <ListGroup.Item>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"IsDelivered\"\r\n                    checked={isDelivered}\r\n                    onChange={e => setIsDelivered(e.target.checked)}\r\n                  ></Form.Check>\r\n                  <Button\r\n                    className=\"btn-md my-2\"\r\n                    variant=\"dark\"\r\n                    onClick={deliveryHandler}\r\n                  >\r\n                    {order.isDelivered ? \"Mark undelivered\" : \"Mark Delivered\"}\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useEffect } from \"react\";\r\nimport { deleteUser, getUserList } from \"../actions/userActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst UserListScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector(state => state.userList);\r\n  const userInfo = useSelector(state => state.userLogin.userInfo);\r\n  const userDelete = useSelector(state => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  const history = useHistory();\r\n  const { users, loading, error } = userList;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(getUserList());\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n  const deleteHandler = async userId => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUser(userId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Store NotifyUsers\" />\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped responsive hover className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button className=\"btn-sm\" variant=\"light\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => {\r\n                      deleteHandler(user._id);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport {\r\n  getUserDetailAdmin,\r\n  updateUserDetailAdmin,\r\n} from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst UserEditScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [message, setMessage] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const getUser = useSelector(state => state.getUserFromId);\r\n  const { loading, error, user } = getUser;\r\n  useEffect(() => {\r\n    if (!user || !user.name || user._id !== id) {\r\n      dispatch(getUserDetailAdmin(id));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, id, user]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    let userDet = {\r\n      name,\r\n      email,\r\n      isAdmin,\r\n    };\r\n    dispatch(updateUserDetailAdmin(userDet, id));\r\n    setMessage(true);\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Update User Profile</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            {message && (\r\n              <Message variant=\"info\">User Updated Successfully</Message>\r\n            )}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={e => setName(e.target.value)}\r\n                  required\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Enter your email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={e => setEmail(e.target.value)}\r\n                  required\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"isAdmin\">\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Is Admin\"\r\n                  checked={isAdmin}\r\n                  onChange={e => setIsAdmin(e.target.checked)}\r\n                ></Form.Check>\r\n              </Form.Group>\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useEffect } from \"react\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst ProductListScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  let pageNumber = useParams().pageNumber || 1;\r\n\r\n  const userInfo = useSelector(state => state.userLogin.userInfo);\r\n  const productList = useSelector(state => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  const prodCreate = useSelector(state => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    product: createdProd,\r\n    success: successCreate,\r\n  } = prodCreate;\r\n\r\n  const success = useSelector(state => state.productDelete.success);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProd._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    successCreate,\r\n    createdProd,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteProductHandler = async prodId => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProduct(prodId));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Product-List\" />\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped responsive hover className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map(product => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>Rs {product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => {\r\n                        deleteProductHandler(product._id);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={userInfo.isAdmin} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { listProductDetail, updateProduct } from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst ProductEditScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const productDetail = useSelector(state => state.productDetail);\r\n  const { loading, error, product } = productDetail;\r\n\r\n  const {\r\n    laoding: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = useSelector(state => state.productUpdate);\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_RESET,\r\n      });\r\n\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product || product._id !== id) {\r\n        dispatch(listProductDetail(id));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, id, product, successUpdate, history]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    let updProd = {\r\n      name,\r\n      description,\r\n      brand,\r\n      category,\r\n      countInStock,\r\n      price,\r\n      image,\r\n    };\r\n    dispatch(updateProduct(updProd, id));\r\n  };\r\n\r\n  const uploadFileHandler = async e => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Edit Products\" />\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Price\"\r\n                value={price}\r\n                onChange={e => setPrice(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={e => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Brand Name\"\r\n                value={brand}\r\n                onChange={e => setBrand(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Item in Stocks\"\r\n                value={countInStock}\r\n                onChange={e => setCountInStock(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category}\r\n                onChange={e => setCategory(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Description\"\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"dark\" className=\"btn\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { listOrders } from \"../actions/orderAction\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst OrderListScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const listOrder = useSelector(state => state.listOrder);\r\n  const { error, loading, orders } = listOrder;\r\n  const userInfo = useSelector(state => state.userLogin.userInfo);\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!(userInfo && userInfo.isAdmin)) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(listOrders());\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Orders List\" />\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped responsive hover className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER-NAME</th>\r\n              <th>POSTAl CODE</th>\r\n              <th>TOTAL</th>\r\n              <th>DATE</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user.name}</td>\r\n                <td>{order.shippingAddress.postalCode}</td>\r\n                <td>Rs {order.totalPrice}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button className=\"btn-sm\" variant=\"light\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst FilteredScreen = () => {\r\n  const productList = useSelector(state => state.filterProduct);\r\n  const { products, error, loading } = productList;\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify | Filtered Proucts\" />\r\n      <Link className=\"btn btn-light my-2\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {products && (\r\n        <>\r\n          <h1>Filtered Products</h1>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant=\"danger\">{error}</Message>\r\n          ) : (\r\n            <>\r\n              <Row>\r\n                {products.map(product => (\r\n                  <Col key={product._id} sm={12} md={6} lg={6} xl={3}>\r\n                    <Product product={product} />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilteredScreen;\r\n","import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Title from \"../components/Title\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { forgotPassword } from \"../actions/userActions\";\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { message, loading, error } = useSelector(\r\n    state => state.userForgotPassword\r\n  );\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    dispatch(forgotPassword(email));\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Forgot Password\" />\r\n      <FormContainer>\r\n        <h1>Forgot Password</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        {message && <Message variant=\"info\">{message}</Message>}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Enter your email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Send Reset Link\r\n          </Button>\r\n        </Form>\r\n        <p className=\"my-3\">\r\n          Have an Account ? <Link to=\"/login\">Login</Link>{\" \"}\r\n        </p>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Title from \"../components/Title\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { resetPassword } from \"../actions/userActions\";\r\n\r\nconst ResetPasswordScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errPass, setErrPass] = useState(\"\");\r\n\r\n  const { resetToken } = useParams();\r\n  const history = useHistory();\r\n  const { error, loading, userInfo } = useSelector(\r\n    state => state.userPasswordReset\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userInfo, history]);\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setErrPass(\"Password does not match\");\r\n    } else {\r\n      dispatch(resetPassword(resetToken, password));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Store Notify| Reset Password\" />\r\n      <FormContainer>\r\n        <h1>Reset Password</h1>\r\n        {errPass && <Message variant=\"danger\">{errPass}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Enter your password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={e => setConfirmPassword(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Reset Password\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;\r\n","import { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RequestLogin = ({ product }) => {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n       <h2> Please login to see the products</h2>\r\n      <Card.Body>\r\n        <Link to={`/login`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>Welcome Guest User</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as=\"div\">\r\n          <h3>`Visited the Site {new Date().toUTCString()}`</h3>\r\n        </Card.Text>\r\n          <button> LOGIN </button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RequestLogin;\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Home from \"./screens/Home\";\r\nimport ProductDetails from \"./screens/ProductDetails\";\r\nimport Cart from \"./screens/Cart\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\r\nimport OrderListScreen from \"./screens/ListOrderScreen\";\r\nimport FilteredScreen from \"./screens/FilteredScreen\";\r\nimport ForgotPasswordScreen from \"./screens/ForgotPasswordScreen\";\r\nimport ResetPasswordScreen from \"./screens/ResetPasswordScreen\";\r\nimport RequestLogin from \"./components/RequestLogin\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n           <Route path=\"/requestlogin\" component={RequestLogin} />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/forgotpassword\" component={ForgotPasswordScreen} />\r\n          <Route\r\n            path=\"/resetpassword/:resetToken\"\r\n            component={ResetPasswordScreen}\r\n          />\r\n          <Route path=\"/profile\" component={ProfileScreen} />\r\n          <Route path=\"/shipping\" component={ShippingScreen} />\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n          <Route path=\"/order/:id\" component={OrderScreen} />\r\n          <Route path=\"/product/:id\" component={ProductDetails} />\r\n          <Route path=\"/cart/:id?\" component={Cart} />\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n          <Route\r\n            path=\"/admin/productlist\"\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/admin/productlist/page/:pageNumber\"\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\r\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\r\n          <Route path=\"/search/:keywords\" component={Home} />\r\n          <Route path=\"/page/:pageNumber\" component={Home} />\r\n          <Route path=\"/filter\" component={FilteredScreen} />\r\n          <Route path=\"/search/:keywords/page/:pageNumber\" component={Home} />\r\n          <Route path=\"/\" component={Home} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// redux/actions/loadStaticModels.js\r\nimport axios from 'axios';\r\nimport {\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_DETAIL_REQUEST,\r\n    PRODUCT_DETAIL_SUCCESS,\r\n    PRODUCT_DETAIL_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_REVIEW_REQUEST,\r\n    PRODUCT_REVIEW_SUCCESS,\r\n    PRODUCT_REVIEW_FAIL,\r\n    PRODUCT_TOP_RATED_REQUEST,\r\n    PRODUCT_TOP_RATED_SUCCESS,\r\n    PRODUCT_TOP_RATED_FAIL,\r\n    PRODUCT_FILTER_REQUEST,\r\n    PRODUCT_FILTER_SUCCESS,\r\n  } from \"../../constants/productConstants\";\r\nexport const LOAD_MODELS_SUCCESS = 'LOAD_MODELS_SUCCESS';\r\n\r\nconst brands = ['vivo', 'oppo', 'motorola', 'samsung'];\r\nconst pages = [1];//[1, 2, 3];\r\n\r\nexport const loadStaticModels = () => async dispatch => {\r\n  const promises = [];\r\n\r\n  for (const brand of brands) {\r\n    for (const page of pages) {\r\n      const url = `/data/${brand}Page${page}.json`; // relative path\r\n      promises.push(\r\n        axios.get(url).then(res => ({\r\n          brand,\r\n          data: res.data,\r\n        })).catch(err => {\r\n          console.error(`❌ Failed to load ${url}`, err.message);\r\n          return { brand, data: [] };\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  const results = await Promise.all(promises);\r\n\r\n  const allData = {};\r\n  brands.forEach(brand => {\r\n    allData[brand] = results\r\n      .filter(r => r.brand === brand)\r\n      .flatMap(r => r.data);\r\n     // allData[brand] = allData[brand].forEach(console.log);\r\n     console.log(allData[brand][0]);\r\n      localStorage.setItem(brand, JSON.stringify(allData[brand] ));\r\n  });\r\n\r\n  dispatch({\r\n    type: LOAD_MODELS_SUCCESS,\r\n    payload: allData,\r\n  });\r\n  dispatch({ type: PRODUCT_LIST_SUCCESS, payload: allData });\r\n};\r\n","// App.js or a top-level component\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadStaticModels } from './reducers/data/loadStaticModels';\r\n\r\nconst InitLoader = ({ store }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    //dispatch(loadStaticModels());\r\n    const fetchData = async () => {\r\n        const action = await loadStaticModels();\r\n        store.dispatch(action);\r\n      };\r\n      fetchData();\r\n\r\n\r\n\r\n  }, [store]);\r\n\r\n  return null; // or spinner\r\n};\r\n\r\nexport default InitLoader;\r\n","import {\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAIL_FAIL,\r\n  PRODUCT_DETAIL_REQUEST,\r\n  PRODUCT_DETAIL_SUCCESS,\r\n  PRODUCT_FILTER_FAIL,\r\n  PRODUCT_FILTER_REQUEST,\r\n  PRODUCT_FILTER_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_REVIEW_FAIL,\r\n  PRODUCT_REVIEW_REQUEST,\r\n  PRODUCT_REVIEW_RESET,\r\n  PRODUCT_REVIEW_SUCCESS,\r\n  PRODUCT_TOP_RATED_FAIL,\r\n  PRODUCT_TOP_RATED_REQUEST,\r\n  PRODUCT_TOP_RATED_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n} from \"../constants/productConstants\";\r\n\r\nconst loadInitial = {}\r\n\r\nconst productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: true, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst productDetailReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAIL_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DETAIL_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAIL_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, success: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, success: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, success: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst productReviewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_REVIEW_SUCCESS:\r\n      return { loading: false, message: action.payload, success: true };\r\n    case PRODUCT_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    case PRODUCT_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst productTopRatedReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_RATED_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_TOP_RATED_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_TOP_RATED_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterProductsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_FILTER_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_FILTER_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_FILTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport {\r\n  productListReducer,\r\n  productDetailReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewReducer,\r\n  productTopRatedReducer,\r\n  filterProductsReducer,\r\n};\r\n","// redux/reducers/modelsReducer.js\r\nimport { LOAD_MODELS_SUCCESS } from './loadStaticModels';\r\n\r\nconst initialState = {\r\n  vivo: [],\r\n  oppo: [],\r\n  motorola: [],\r\n  samsung: [],\r\n};\r\n\r\nexport default function modelsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_MODELS_SUCCESS:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  filterProductsReducer,\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productDetailReducer,\r\n  productListReducer,\r\n  productReviewReducer,\r\n  productTopRatedReducer,\r\n  productUpdateReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  __STORENOTIFY_CARTITEMS,\r\n  __STORENOTIFY_PAYMENT_METHOD,\r\n  __STORENOTIFY_SHIPPING_ADDRESS,\r\n  __STORENOTIFY_USERINFO,\r\n} from \"./constants/localStrorageConstant\";\r\nimport {\r\n  getUserFromIdReducer,\r\n  updateUserFromIdReducer,\r\n  userDeleteReducer,\r\n  userDetailsReducer,\r\n  userForgotPasswordReducer,\r\n  userListReducer,\r\n  userLoginReducer,\r\n  userPasswordResetReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  listOrderReducer,\r\n  myOrderReducer,\r\n  orderCreateReducers,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  updateOrderReducer,\r\n} from \"./reducers/orderReducers\";\r\nimport modelsReducer from './reducers/data/modelReducer';\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  filterProduct: filterProductsReducer,\r\n  productDetail: productDetailReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReview: productReviewReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  models: modelsReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userForgotPassword: userForgotPasswordReducer,\r\n  userPasswordReset: userPasswordResetReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  getUserFromId: getUserFromIdReducer,\r\n  updateUserFromId: updateUserFromIdReducer,\r\n  userDelete: userDeleteReducer,\r\n  orderCreate: orderCreateReducers,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  myOrder: myOrderReducer,\r\n  listOrder: listOrderReducer,\r\n  updateOrder: updateOrderReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(__STORENOTIFY_CARTITEMS)\r\n  ? JSON.parse(localStorage.getItem(__STORENOTIFY_CARTITEMS))\r\n  : [];\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\r\n  __STORENOTIFY_SHIPPING_ADDRESS\r\n)\r\n  ? JSON.parse(localStorage.getItem(__STORENOTIFY_SHIPPING_ADDRESS))\r\n  : {};\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem(\r\n  __STORENOTIFY_PAYMENT_METHOD\r\n)\r\n  ? JSON.parse(localStorage.getItem(__STORENOTIFY_PAYMENT_METHOD))\r\n  : null;\r\n\r\nconst userInfoFromStorage = localStorage.getItem(__STORENOTIFY_USERINFO)\r\n  ? JSON.parse(localStorage.getItem(__STORENOTIFY_USERINFO))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentMethodFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n \r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_ITEM_RESET,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstants\";\r\n\r\nconst cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const exist = state.cartItems.find(x => x.product === item.product);\r\n      if (exist) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(x =>\r\n            x.product === exist.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          prod => prod.product !== action.payload\r\n        ),\r\n      };\r\n    case CART_ITEM_RESET:\r\n      return { ...state, cartItems: [] };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return { ...state, shippingAddress: action.payload };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return { ...state, paymentMethod: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { cartReducer };\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_ADMIN_DELETE_SUCCESS,\r\n  USER_ADMIN_DELETE_REQUEST,\r\n  USER_ADMIN_DELETE_FAIL,\r\n  GET_USER_ADMIN_REQUEST,\r\n  GET_USER_ADMIN_SUCCESS,\r\n  GET_USER_ADMIN_FAIL,\r\n  GET_USER_ADMIN_RESET,\r\n  UPDATE_USER_ADMIN_REQUEST,\r\n  UPDATE_USER_ADMIN_SUCCESS,\r\n  UPDATE_USER_ADMIN_FAIL,\r\n  UPDATE_USER_ADMIN_RESET,\r\n  USER_FORGOT_PASSWORD_SUCCESS,\r\n  USER_FORGOT_PASSWORD_FAIL,\r\n  USER_FORGOT_PASSWORD_REQUEST,\r\n  USER_RESET_PASSWORD_REQUEST,\r\n  USER_RESET_PASSWORD_SUCCESS,\r\n  USER_RESET_PASSWORD_FAIL,\r\n  USER_RESET_PASSWORD_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nconst userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true, userInfo: null };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true, userInfo: null };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userForgotPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_FORGOT_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case USER_FORGOT_PASSWORD_SUCCESS:\r\n      return { loading: false, message: action.payload };\r\n    case USER_FORGOT_PASSWORD_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userPasswordResetReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_RESET_PASSWORD_REQUEST:\r\n      return { loading: true, userInfo: null };\r\n    case USER_RESET_PASSWORD_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_RESET_PASSWORD_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_RESET_PASSWORD_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, success: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return { userInfo: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst getUserFromIdReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_ADMIN_REQUEST:\r\n      return { loading: true };\r\n    case GET_USER_ADMIN_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case GET_USER_ADMIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case GET_USER_ADMIN_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst updateUserFromIdReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_USER_ADMIN_REQUEST:\r\n      return { loading: true };\r\n    case UPDATE_USER_ADMIN_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case UPDATE_USER_ADMIN_FAIL:\r\n      return { loading: false, success: false, error: action.payload };\r\n    case UPDATE_USER_ADMIN_RESET:\r\n      return { userInfo: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userDeleteReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_ADMIN_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_ADMIN_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_ADMIN_DELETE_FAIL:\r\n      return { loading: false, success: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  getUserFromIdReducer,\r\n  updateUserFromIdReducer,\r\n  userForgotPasswordReducer,\r\n  userPasswordResetReducer,\r\n};\r\n","import {\r\n  MY_ORDER_FAIL,\r\n  MY_ORDER_REQUEST,\r\n  MY_ORDER_RESET,\r\n  MY_ORDER_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_GET_FAIL,\r\n  ORDER_GET_REQUEST,\r\n  ORDER_GET_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_UPDATE_FAIL,\r\n  ORDER_UPDATE_REQUEST,\r\n  ORDER_UPDATE_RESET,\r\n  ORDER_UPDATE_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst orderCreateReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload };\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, success: false, error: action.payload };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload };\r\n    case ORDER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_PAY_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ORDER_PAY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst myOrderReducer = (state = { myOrders: [] }, action) => {\r\n  switch (action.type) {\r\n    case MY_ORDER_REQUEST:\r\n      return { loading: true };\r\n    case MY_ORDER_SUCCESS:\r\n      return { loading: false, myOrders: action.payload };\r\n    case MY_ORDER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case MY_ORDER_RESET:\r\n      return { myOrders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst listOrderReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_GET_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_GET_SUCCESS:\r\n      return { loading: false, orders: action.payload };\r\n    case ORDER_GET_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst updateOrderReducer = (state = { order: {} }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, orders: action.payload };\r\n    case ORDER_UPDATE_FAIL:\r\n      return { loading: false, success: false, error: action.payload };\r\n    case ORDER_UPDATE_RESET:\r\n      return { order: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport {\r\n  orderCreateReducers,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  myOrderReducer,\r\n  listOrderReducer,\r\n  updateOrderReducer,\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/bootstrap.min.css\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport InitLoader from \"./InitLoader\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n//  <InitLoader store={store} />\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    \r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}